import org.asciidoctor.gradle.jvm.AsciidoctorTask

plugins {
    id 'org.asciidoctor.jvm.convert'
}

tasks.withType(AsciidoctorTask).configureEach {
    baseDirFollowsSourceFile()

    /* No src/docs/images directory in project
    resources { from 'src/docs/images'; into './images' }
    */

    /* sourcedir attribute not used in asciidoc sources
    def coreSourceDir = rootProject.allprojects.find({ it.name == 'views-core'}).layout.projectDirectory.dir('src/main/groovy').asFile
     */
    attributes 'experimental' : 'true',
               'compat-mode'  : 'true',
               'toc'          : 'left',
               'icons'        : 'font',
               'version'      : version
               //'sourcedir'    : coreSourceDir
}

// Groovydoc task requires the Groovy version of Gradle
configurations.register('groovydocImplementation')

dependencies {
    groovydocImplementation localGroovy(), {
        because 'The Groovydoc task requires the Groovy version of Gradle'
    }
}

tasks.register('apidocs', Groovydoc) {

    group = 'documentation'
    docTitle = "Grails Views $version"

    def projectNames = ['views-core', 'views-json', 'views-json-testing-support', 'views-markup','views-gradle']
    def projects = rootProject.allprojects.findAll { it.name in projectNames }
    source projects.collect { it.layout.projectDirectory.dir('src/main/groovy') }
    destinationDir = layout.buildDirectory.dir('docs/api').get().asFile
}

tasks.withType(Groovydoc).configureEach {
    access = GroovydocAccess.PRIVATE
    processScripts = false
    includeMainForScripts = false
    includeAuthor = true
    classpath = configurations.groovydocImplementation
    groovyClasspath = configurations.groovydocImplementation
}

tasks.register('docs') {
    group = 'documentation'
    dependsOn 'apidocs', 'asciidoctor'
}
