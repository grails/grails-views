plugins {
    id 'groovy'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group = 'org.grails.plugins'
ext.set('projectDesc', 'JSON Views Templates')

dependencies {

    api project(':views-json')

    // Should this be api, implementation, compileOnly or provided?
    // The templates expect classes from this library as models
    // but I'm not sure in what context these templates are used
    // They were previously compileOnly
    implementation libs.grails.datastore.gorm.mongodb

    compileOnly libs.slf4j.nop // Get rid of warning about missing slf4j implementation during compileGsonViews task
}

def templateSourceDir = layout.projectDirectory.dir('src/templates')
def compilationOutputDir = layout.buildDirectory.dir('classes/groovy/main')
sourceSets {
    main {
        groovy {
            // Add templates as source dir
            srcDirs = [templateSourceDir]
        }
    }
}

tasks.register('compileViews', JavaExec) {
    inputs.dir templateSourceDir
    outputs.dir compilationOutputDir
    mainClass = 'grails.plugin.json.view.JsonViewCompiler'
    classpath configurations.compileClasspath
    args(templateSourceDir.asFile, compilationOutputDir.get().asFile, libs.versions.java.baseline.get(), ' ', ' ', 'none', 'UTF-8')
}

// This is needed to trigger compilation of the views
tasks.named('classes') {
    dependsOn 'compileViews'
}

apply from: rootProject.layout.projectDirectory.file('gradle/java-config.gradle')
apply from: rootProject.layout.projectDirectory.file('gradle/publishing.gradle')

// There are no javadocs for this project.
// This is a workaround as a javadoc jar is required for publishing.
tasks.named('javadocJar', Jar) {
    from 'src/templates'
}