name: Java CI
on:
  push:
    branches:
      - '[2-9]+.[0-9]+.x'
  pull_request:
    branches:
      - '[2-9]+.[0-9]+.x'
env:
  GIT_USER_NAME: puneetbehl
  GIT_USER_EMAIL: behlp@unityfoundation.io

jobs:

  test_project:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    strategy:
        fail-fast: false
        matrix: { java: [11, 17] }
    steps:
      - uses: actions/checkout@v4
      - uses: gradle/wrapper-validation-action@v2
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ matrix.java }}
      - name: Run Tests
        if: github.event_name == 'pull_request'
        id: tests
        uses: gradle/actions/setup-gradle@v3
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
        with:
          arguments: check -Dgeb.env=chromeHeadless

  build_project:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      - uses: gradle/wrapper-validation-action@v2
      - uses: actions/setup-java@v4
        with: { java-version: 11, distribution: temurin }
      - name: Run Build
        uses: gradle/actions/setup-gradle@v3
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
        with:
          arguments: build -Dgeb.env=chromeHeadless

      - name: Publish Snapshot artifacts to Artifactory (repo.grails.org)
        if: success()
        uses: gradle/actions/setup-gradle@v3
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          ORG_GRADLE_PROJECT_artifactoryPublishUsername: ${{ secrets.ARTIFACTORY_USERNAME }}
          ORG_GRADLE_PROJECT_artifactoryPublishPassword: ${{ secrets.ARTIFACTORY_PASSWORD }}
        with:
          arguments: |
            -Dorg.gradle.internal.publish.checksums.insecure=true
            publish

      - name: Generate Snapshot Documentation
        if: success()
        uses: gradle/actions/setup-gradle@v3
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
        with:
          arguments: views-docs:docs

      - name: Publish Snapshot Documentation to Github Pages
        if: success()
        uses: micronaut-projects/github-pages-deploy-action@grails
        env:
          BRANCH: gh-pages
          COMMIT_EMAIL: ${{ env.GIT_USER_EMAIL }}
          COMMIT_NAME: ${{ env.GIT_USER_NAME }}
          FOLDER: docs/build/docs
          GH_TOKEN: ${{ secrets.GH_TOKEN }}