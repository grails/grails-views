name: Release
on:
  release:
    types: [published]

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      GIT_USER_NAME: puneetbehl
      GIT_USER_EMAIL: behlp@unityfoundation.io
    steps:
      - uses: actions/checkout@v4
      - uses: gradle/wrapper-validation-action@v2
      - uses: actions/setup-java@v4
        with: { java-version: 11, distribution: temurin }

      - name: Get the current release version
        id: release_version
        run: |
          echo "Release version: ${GITHUB_REF:11}"
          echo "release_version=${GITHUB_REF:11}" >> $GITHUB_OUTPUT

      - name: Set projectVersion to the release version
        uses: micronaut-projects/github-actions/pre-release@master

      - name: Generate key file for artifact signing
        env:
          SECRING_FILE: ${{ secrets.SECRING_FILE }}
        run: echo $SECRING_FILE | base64 -d > ${{ github.workspace }}/secring.gpg

      - name: Publish release artifacts to Sonatype
        id: publish_to_sonatype
        uses: gradle/actions/setup-gradle@v3
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY }}
          GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER }}
          ORG_GRADLE_PROJECT_sonatypeOssUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_sonatypeOssPassword: ${{ secrets.SONATYPE_PASSWORD }}
          ORG_GRADLE_PROJECT_sonatypeOssStagingProfileId: ${{ secrets.SONATYPE_STAGING_PROFILE_ID }}
          ORG_GRADLE_PROJECT_sonatypeOssRepo: 'https://s01.oss.sonatype.org/service/local/'
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSPHRASE: ${{ secrets.SIGNING_PASSPHRASE }}
        with:
          arguments: |
            -Psigning.secretKeyRingFile=${{ github.workspace }}/secring.gpg
            publishToSonatype
            closeAndReleaseSonatypeStagingRepository

      - name: Generate Documentation
        if: success()
        uses: gradle/actions/setup-gradle@v3
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER }}
          GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY }}         
        with:
          arguments: views-docs:docs

      - name: Publish Documentation to Github Pages
        if: success()
        uses: micronaut-projects/github-pages-deploy-action@grails
        env:
          BETA: ${{ contains(steps.release_version.outputs.release_version, 'M') || contains(steps.release_version.outputs.release_version, 'RC') }}
          BRANCH: gh-pages
          COMMIT_EMAIL: ${{ env.GIT_USER_EMAIL }}
          COMMIT_NAME: ${{ env.GIT_USER_NAME }}
          FOLDER: docs/build/docs
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          VERSION: ${{ steps.release_version.outputs.release_version }}

      - name: Set projectVersion to the next snapshot version
        if: success()
        uses: micronaut-projects/github-actions/post-release@master