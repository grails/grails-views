buildscript {
    repositories {
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsGradlePluginVersion"
        classpath "org.grails.plugins:views-gradle:$functionalTestViewsGradleVersion"
        classpath "org.gradle:test-retry-gradle-plugin:1.3.1"
    }
}

version "0.1-SNAPSHOT"
group "org.grails.plugins"

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.plugins.views-json"
apply plugin: "org.gradle.test-retry"
//apply plugin: "org.grails.plugins.views-markup"

sourceCompatibility = 1.11
targetCompatibility = 1.11

repositories {
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    api 'org.springframework.boot:spring-boot-starter-logging'
    api "org.springframework.boot:spring-boot-starter-actuator"
    api "org.springframework.boot:spring-boot-autoconfigure"
    api "org.springframework.boot:spring-boot-starter-tomcat"

    api "org.grails:grails-web-boot"
    api "org.grails:grails-dependencies"
    api "javax.servlet:javax.servlet-api:$servletApiVersion"

    api project(":views-json")
    api project(":views-markup")
}

tasks.withType(Test) {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
        exceptionFormat = 'full'
    }
    configure {
        retry {
            maxRetries = 2
            maxFailures = 20
            failOnPassedAfterRetry = true
        }
    }
}

compileGsonViews {
    classpath += configurations.compileClasspath
}
